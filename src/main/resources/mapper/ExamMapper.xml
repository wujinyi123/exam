<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.system.exam.mapper.exam.ExamMapper">
    <!--查询考试码-->
    <select id="getExamByCode" parameterType="com.system.exam.domain.qo.exam.ExamQO" resultType="com.system.exam.domain.dto.exam.ExamDTO">
        SELECT
        tab.examCode examCode,
        tab.examName examName,
        tab.score score,
        tab.teacherName teacherName,
        tab.time time,
        tab.pdDate pdDate,
        tab.expDate expDate,
        if(tab.remark='0' and tab.exp &lt; SYSDATE(),'2',tab.remark) remark,
        if(tab.remark='1',
            (select score from answer
            where exam_code=tab.examCode and student_number=#{number})
            ,'') myScore
        FROM
        (SELECT
        t.exam_code examCode,
        t.exam_name examName,
        t.score score,
        (select
        concat((select name from college WHERE code=te.college_code),',',te.name,'老师')
        from teacher te
        where te.number=t.teacher_number) teacherName,
        concat(t.time,'分钟') time,
        date_format(t.pd_time,'%Y-%m-%d %H:%i:%s') pdDate,
        date_format(t.exp_time,'%Y-%m-%d %H:%i:%s') expDate,
        t.exp_time exp,
        (select count(1) from answer
        where state='1' and exam_code=t.exam_code and student_number=#{number}) remark
        FROM exam t where t.exam_code=#{examCode}) tab
    </select>

    <!--获取未参加且未超过截止时间的考试（学生）-->
    <select id="pageNewExam" parameterType="com.system.exam.domain.qo.exam.NewExamQO" resultType="com.system.exam.domain.dto.exam.ExamDTO">
        select
            t.exam_code examCode,
            t.exam_name examName,
            t.score score,
            (select
                concat((select name from college WHERE code=te.college_code),',',te.name,'老师')
                from teacher te
                where te.number=t.teacher_number) teacherName,
            concat(t.time,'分钟') time,
            date_format(t.pd_time,'%Y-%m-%d %H:%i:%s') pdDate,
            date_format(t.exp_time,'%Y-%m-%d %H:%i:%s') expDate
        from exam_message em
        left join exam t on em.exam_code=t.exam_code
        left join
            (select stu.clazz_number clazz_number,a.exam_code exam_code,'1' isFinish
            from answer a left join student stu on a.student_number=stu.number
            where a.state='1' and stu.state='1' and a.student_number=#{number}) ans
            on em.clazz_number=ans.clazz_number and em.exam_code=ans.exam_code
        where t.state='1' and em.state='1' and ans.isFinish is null and t.exp_time>SYSDATE()
            and em.clazz_number=(select clazz_number from student where number=#{number})
        ORDER BY t.exp_time,t.exam_code
    </select>

    <!--近期（5条）考试成绩 （学生）-->
    <select id="listNewScore" parameterType="string" resultType="com.system.exam.domain.dto.exam.ExamDTO">
        select
            t.exam_code examCode,
            t.exam_name examName,
            t.score score,
            (select
                concat((select name from college WHERE code=te.college_code),',',te.name,'老师')
                from teacher te
                where te.number=t.teacher_number) teacherName,
            ans.use_time time,
            ans.score myScore
        from answer ans
        left join exam t on ans.exam_code=t.exam_code
        where ans.state='1' and t.state='1' and ans.student_number=#{number}
        ORDER BY ans.submit_time desc
        LIMIT 5
    </select>

    <!--进入考试-->
    <select id="enterExam" parameterType="com.system.exam.domain.qo.exam.ExamQO" resultType="com.system.exam.domain.dto.exam.EnterExamDTO">
        select
            t.exam_code examCode,
            t.exam_name examName,
            t.score score,
            t.time time,
            (select sum(score) from question
                where state='1' and exam_code=t.exam_code and type='1') singleScore,
            (select sum(score) from question
                where state='1' and exam_code=t.exam_code and type='2') multipleScore
        from exam t
        where t.state='1' and t.exam_code=#{examCode}
    </select>

    <!--根据题目类型，得到题目集合-->
    <select id="listQuestion" parameterType="com.system.exam.domain.qo.exam.ExamQO" resultType="com.system.exam.domain.dto.exam.QuestionDTO">
        select
            question question,
            answer answer,
            score score,
            option_a optionA,
            option_b optionB,
            option_c optionC,
            option_d optionD,
            answer_analysis analysis,
            img_question imgQuestion,
            img_a imgA,
            img_b imgB,
            img_c imgC,
            img_d imgD,
            img_analysis imgAnalysis
        from question
        where state='1' and type=#{type} and exam_code=#{examCode}
        ORDER BY id
    </select>

    <!--题目的正确答案-->
    <select id="listAnswer" parameterType="com.system.exam.domain.qo.exam.ExamQO" resultType="com.system.exam.domain.dto.exam.AnswerDTO">
        select
            answer answer,
            score score,
            answer_analysis answerAnalysis,
            img_analysis imgAnalysis
        from question
        where state='1' and exam_code=#{examCode} and type=#{type}
        order by id
    </select>

    <!--上传考试结果-->
    <insert id="submitAnswer" parameterType="com.system.exam.domain.qo.exam.AnswerQO">
        insert into answer(exam_code,student_number,single_answer,multiple_answer,score,use_time,submit_time,state)
        values (#{examCode},#{stuNumber},#{singleAnswer},#{multipleAnswer},#{score},#{useTime},#{submitTime},'1')
    </insert>

    <!--是否已参加考试-->
    <select id="checkExam" parameterType="com.system.exam.domain.qo.exam.ExamQO" resultType="int">
        select count(1) from answer
        where state='1' and exam_code=#{examCode} and student_number=#{number}
    </select>

    <!--得到考生答案-->
    <select id="getStuAns" parameterType="com.system.exam.domain.qo.exam.ExamQO" resultType="com.system.exam.domain.dto.exam.StuAnsDTO">
        select
            score score,
            single_answer singleAnswer,
            multiple_answer multipleAnswer
        from answer
        where state='1' and exam_code=#{examCode} and student_number=#{number}
    </select>

    <!--更新考生成绩-->
    <update id="updateScore" parameterType="com.system.exam.domain.qo.exam.ExamQO">
        update answer set score=#{stuScore}
        where state='1' and exam_code=#{examCode} and student_number=#{number}
    </update>

    <!--教师分页查询考试-->
    <select id="pageExam" parameterType="com.system.exam.domain.qo.exam.PageExamQO" resultType="com.system.exam.domain.dto.exam.PageExamDTO">
        select
            exam_code examCode,
            exam_name examName,
            score score,
            time time,
            date_format(pd_time,'%Y-%m-%d %H:%i:%s') pdDate,
            date_format(exp_time,'%Y-%m-%d %H:%i:%s') expDate
        from exam
        where state='1' and teacher_number=#{teacherNumber}
        <if test="examTerm!=null and examTerm!=''">
            and (exam_code like concat('%',#{examTerm},'%')
            or exam_name like concat('%',#{examTerm},'%'))
        </if>
    </select>

    <select id="countNotice" parameterType="com.system.exam.domain.qo.exam.ExamNoticeQO" resultType="int">
        select count(1) from exam_message
        where state='1' and exam_code=#{examCode} and clazz_number=#{clazzNumber}
    </select>

    <insert id="examNotice" parameterType="com.system.exam.domain.qo.exam.ExamNoticeQO">
        insert into exam_message(exam_code,clazz_number,state)
        values (#{examCode},#{clazzNumber},'1');
    </insert>

    <select id="getExamInfo" parameterType="string" resultType="com.system.exam.domain.dto.exam.ExamInfoDTO">
        select
            exam_code examCode,exam_name examName,score,time,
            date_format(pd_time,'%Y-%m-%d %H:%i:%s') pdTime,
            date_format(exp_time,'%Y-%m-%d %H:%i:%s') expTime
        from exam
        where state='1' and exam_code=#{examCode}
    </select>

    <update id="deleteExam" parameterType="string">
        update exam set state='0' where exam_code=#{examCode} and state='1'
    </update>

    <select id="pageGrade" parameterType="com.system.exam.domain.qo.exam.PageGradeQO" resultType="com.system.exam.domain.dto.exam.PageGradeDTO">
        select
            stu.number stuNumber,
            stu.name stuName,
            if((ans.score is null or ans.score='') and ans.score!='0','未参加',ans.score) stuScore,
            if(ans.use_time is null or ans.use_time='','--',ans.use_time) useTime,
            if(ans.submit_time is null or ans.submit_time='',
            '--',date_format(ans.submit_time,'%Y-%m-%d %H:%i:%s')) submitTime
        from student stu
        left join
            (select student_number,score,use_time,submit_time
            from answer where state='1' and exam_code=#{examCode}) ans
        on stu.number=ans.student_number
        where stu.state='1' and stu.clazz_number=#{clazzNumber}
        ORDER BY ans.score desc,stu.number
    </select>

    <select id="clazzGrade" parameterType="com.system.exam.domain.qo.exam.ClazzGradeQO" resultType="com.system.exam.domain.dto.exam.ClazzGradeDTO">
        select
            date_format(t.exp_time,'%Y-%m-%d %H:%i:%s') expTime,
            t.score examScore,
            convert(if(y.avgScore is null,0,y.avgScore),decimal(12,2)) avgScore,
            y.clazzSize clazzSize,
            if(y.finishSize is null,0,y.finishSize) finishSize
        from exam t,
            (select
                avg(ans.score) avgScore,
                count(1) clazzSize,
                sum(ans.finish) finishSize
            from student stu
            left join
            (select student_number,score,'1' finish
            from answer where state='1' and exam_code=#{examCode}) ans
            on stu.number=ans.student_number
            where stu.state='1' and stu.clazz_number=#{clazzNumber}) y
        where t.state='1' and t.exam_code=#{examCode}
    </select>
</mapper>